if game.PlaceId == 730951264 then
   -- init
    local library = loadstring(game:HttpGet("https://raw.githubusercontent.com/GreenDeno/Venyx-UI-Library/main/source.lua"))()
    

   

    --------------

    players_service = game:GetService("Players")
    players = {}
    plr = players_service.LocalPlayer
    character = plr.Character
    hum = character:FindFirstChildWhichIsA("Humanoid")
    root = character:FindFirstChild("HumanoidRootPart")

    task.spawn(function()
        while task.wait() do
            character = plr.Character
            if character ~= nil and character:FindFirstChildWhichIsA("Humanoid") ~= nil then
                hum = character:FindFirstChildWhichIsA("Humanoid")
                root = character:FindFirstChild("HumanoidRootPart")
            end
        end
    end)

    --------------

    -- first page
    while true do
    local success, error = pcall(function()
        if game:GetService("Players").LocalPlayer.PlayerGui.FirstPerson.Value == true then
            game:GetService("Players").LocalPlayer.PlayerGui.FirstPerson.Value = false
        end
    end)
    if not success then
        warn("An error occurred while running the script: " .. error)
    end
    wait(0.1)
end

    -- second page
    

    -- load
    
    -- SCRIPTING

    local OldNameCall = nil
    OldNameCall = hookmetamethod(game, "__namecall", function(Self, ...)
        local NamecallMethod = getnamecallmethod()

        if not checkcaller() and Self == plr and NamecallMethod == "Kick" then
            return wait(9e9)
        end

        return OldNameCall(Self, ...)
    end)

    local m = require(plr.PlayerScripts.COM)

    local function getPlot()
        return m.CurrentPLOT
    end

    task.spawn(function()
        local fixing = false
        game:GetService("RunService").Heartbeat:Connect(function()
            if testsignal_af_var == true then
                game:GetService("ReplicatedStorage").ZiNoy.Apps.TestSignal:FireServer(getPlot(), "Test Signal")
                game:GetService("ReplicatedStorage").ZiNoy.Apps.TestSignal:FireServer(getPlot(), "Ping 2.0")
            end
            if auto_fix_bugs_var == true then
                for _, obj in pairs(getPlot().Wires.Conduits:GetChildren()) do
                    if obj:FindFirstChild("BugFold") and fixing == false then
                        repeat task.wait() until character ~= nil
                        fixing = true
                        local oldcf = root.CFrame
                        local prompt = obj:FindFirstChild("BugFold"):FindFirstChildOfClass("Part"):FindFirstChildOfClass("ProximityPrompt")
                        root.CFrame = CFrame.new(obj:FindFirstChild("BugFold"):FindFirstChildOfClass("Part").CFrame.X+1.5,obj:FindFirstChild("BugFold"):FindFirstChildOfClass("Part").CFrame.Y,obj:FindFirstChild("BugFold"):FindFirstChildOfClass("Part").CFrame.Z)
                        fireproximityprompt(prompt, prompt.MaxActivationDistance)
                        wait(.2)
                        root.CFrame = oldcf
                        fixing = false
                    end
                end
            end
        end)
    end) 
end
